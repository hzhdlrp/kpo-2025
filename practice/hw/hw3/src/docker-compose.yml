services:
  order-service:
    container_name: order-service
    image: src:order-service
    build:
      context: ./order
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - order-db
      - kafka
      - zookeeper
    networks:
      - shop-network

  order-db:
    image: postgres:13
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - shop-network
    ports:
      - "5430:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shop-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - shop-network

  payments-service:
    container_name: payment-service
    image: src:payments-service
    build:
      context: ./payment
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - payments-db
      - kafka
    networks:
      - shop-network

  gateway:
    container_name: gateway
    image: src:gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    networks:
      - shop-network

  payments-db:
    image: postgres:13
    environment:
      POSTGRES_DB: payments_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - payments-db-data:/var/lib/postgresql/data
    networks:
      - shop-network
    ports:
      - "5431:5432"

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.22.0
    restart: always
    ports:
      - "8083:8080"
    environment:
      URLS: >
        [
          { name: 'Order', url: 'http://localhost:8080/api' },
          { name: 'Payment', url: 'http://localhost:8081/api' },
          { name: 'Gateway', url: 'http://localhost:8084/api' }
        ]

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - shop-network
    depends_on:
      - kafka

volumes:
  order-db-data:
  payments-db-data:

networks:
  shop-network:
    driver: bridge